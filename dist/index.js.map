{"version":3,"sources":["webpack://bigiron.css/./src/variables-dark.css","webpack://bigiron.css/./src/variables-light.css","webpack://bigiron.css/./src/index.ts","webpack://bigiron.css/external \"css\"","webpack://bigiron.css/webpack/bootstrap","webpack://bigiron.css/webpack/startup","webpack://bigiron.css/webpack/runtime/define property getters","webpack://bigiron.css/webpack/runtime/hasOwnProperty shorthand","webpack://bigiron.css/webpack/runtime/make namespace object"],"names":["getCssVariablesObject","str","obj","parse","stylesheet","rules","declarations","dec","property","value","lightProperties","darkProperties","mode","data","console","log","Object","entries","key","document","body","style","setProperty","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"mappings":"qFAAA,6oB,4CCAA,ypB,8MCCA,gBAEA,YACA,WAMA,SAASA,EAAsBC,GAI9B,I,UADIC,EAA0B,GACZ,MAF8B,QAAtC,EAA6B,QAA7B,EAAiB,QAAjB,EAAG,UAAIC,MAAMF,UAAI,eAAEG,kBAAU,eAAEC,MAAM,UAAC,eAAGC,aAEjC,eAAM,CAAnB,IAAMC,EAAG,KACbL,EAAIK,EAAIC,UAAYD,EAAIE,MAEzB,OAAOP,EAGK,EAAAQ,gBAAkBV,EAAsB,WACxC,EAAAW,eAAiBX,EAAsB,WAKpD,oBAAyBY,GACxB,IAAIC,EAAO,EAAAH,gBACG,SAATE,IACJC,EAAO,EAAAF,gBAGRG,QAAQC,IAAI,EAAAJ,gBAGX,IADA,IAC2B,MADPK,OAAOC,QAAQJ,GACR,eAAa,CAA7B,WAACK,EAAG,KAAET,EAAK,KACtBU,SAASC,KAAKC,MAAMC,YAAYJ,EAAKT,M,OCpCvCc,EAAOC,QAAUC,QAAQ,SCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUE,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,QCjBf,OCFAG,EAAoBI,EAAI,CAACP,EAASQ,KACjC,IAAI,IAAId,KAAOc,EACXL,EAAoBM,EAAED,EAAYd,KAASS,EAAoBM,EAAET,EAASN,IAC5EF,OAAOkB,eAAeV,EAASN,EAAK,CAAEiB,YAAY,EAAMC,IAAKJ,EAAWd,MCJ3ES,EAAoBM,EAAI,CAAC/B,EAAKmC,IAASrB,OAAOsB,UAAUC,eAAeT,KAAK5B,EAAKmC,GCCjFV,EAAoBa,EAAKhB,IACH,oBAAXiB,QAA0BA,OAAOC,aAC1C1B,OAAOkB,eAAeV,EAASiB,OAAOC,YAAa,CAAEjC,MAAO,WAE7DO,OAAOkB,eAAeV,EAAS,aAAc,CAAEf,OAAO,KHFhDkB,EAAoB,M","file":"index.js","sourcesContent":["export default \":root {\\n  --background-body: #151414;\\n  --background: #2b2b2b;\\n  --background-alt: #1a242f;\\n  --selection: #1c76c5;\\n  --text-main: #dbdbdb;\\n  --text-bright: #fff;\\n  --text-muted: #a9b1ba;\\n  --links: #41adff;\\n  --focus: #0096bfab;\\n  --border: #526980;\\n  --code: #ffbe85;\\n  --animation-duration: 0.1s;\\n  --button-hover: #324759;\\n  --scrollbar-thumb: var(--button-hover);\\n  --scrollbar-thumb-hover: color-mod(var(--scrollbar-thumb) lightness(+8%));\\n  --form-placeholder: #a9a9a9;\\n  --form-text: #fff;\\n  --variable: #d941e2;\\n  --highlight: #efdb43;\\n  --select-arrow: svg-load('./assets/select-arrow.svg', fill: #efefef);\\n}\\n\";","export default \":root {\\n  --background-body: #fff;\\n  --background: #efefef;\\n  --background-alt: #f7f7f7;\\n  --selection: #9e9e9e;\\n  --text-main: #363636;\\n  --text-bright: #000;\\n  --text-muted: #70777f;\\n  --links: #0076d1;\\n  --focus: #0096bfab;\\n  --border: #dbdbdb;\\n  --code: #000;\\n  --animation-duration: 0.1s;\\n  --button-hover: #ddd;\\n  --scrollbar-thumb: color-mod(var(--button-hover) lightness(-3%));\\n  --scrollbar-thumb-hover: color-mod(var(--button-hover) lightness(-10%));\\n  --form-placeholder: #949494;\\n  --form-text: #000;\\n  --variable: #39a33c;\\n  --highlight: #ff0;\\n  --select-arrow: svg-load('./assets/select-arrow.svg', fill: #161f27);\\n}\\n\";","// @ts-ignore\nimport lightVariables from './variables-light.css'\n// @ts-ignore\nimport darkVariables from './variables-dark.css'\nimport css from \"css\";\n\n\n/**\n * Get the CSS variables from a theme\n */\nfunction getCssVariablesObject(str: string): Record<string, any> {\n\t// @ts-ignore\n\tconst decs = css.parse(str)?.stylesheet?.rules[0]?.declarations;\n\tlet obj: {[T: string]: any} = {};\n\tfor (const dec of decs) {\n\t\tobj[dec.property] = dec.value;\n\t}\n\treturn obj;\n}\n\nexport const lightProperties = getCssVariablesObject(lightVariables);\nexport const darkProperties = getCssVariablesObject(darkVariables);\n\n/**\n * Set a theme in CSS (light or dark)\n */\nexport function setTheme(mode: \"light\" | \"dark\") {\n\tlet data = lightProperties;\n  if (mode === \"dark\") {\n\t\tdata = darkProperties;\n\t}\n\t\n\tconsole.log(darkProperties);\n\t\n  const dataEntries = Object.entries(data);\n  for (const [key, value] of dataEntries) {\n\t\tdocument.body.style.setProperty(key, value);\n  }\n}\n","module.exports = require(\"css\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(465);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}